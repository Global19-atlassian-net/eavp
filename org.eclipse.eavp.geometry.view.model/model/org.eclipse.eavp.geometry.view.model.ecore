<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="model" nsURI="http://www.eclipse.org/" nsPrefix="eavp">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="documentation" value="Get the value of the specified rendering property."/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="MeshCache">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A MeshCache is a central repository for data objects of type T, where T is a data object specific to the rendering engine associated with the cache. The cache will be responsible for creating and maintaining these objects. The MeshCache will supply references to them to Meshes on request, allowing multiple Meshes to draw from the same data object as a part of the Flyweight pattern. "/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eOperations name="getMesh">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Get the mesh for a given type, creating it if it does not already exist. It is assummed that all shapes of the type will make use of the same mesh, possibly transformed geometriclly, for rendering. For example, all shapes of type &quot;RECTANGULAR_PRISM&quot; might use the same eight pointed mesh, with each one distinguished by a differing position in three dimensional space or by changing its dimensions. The operation will return null for types which do not have such a prototypical mesh. In this case, getMesh(EEList&lt;Triangle>) should be used instead."/>
        <details key="body" value="// For the base implementation, assume that the cache was loaded during&#xD;&#xA;// initialization.&#xD;&#xA;return typeCache.get(type);"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//MeshCache/T"/>
      <eParameters name="type" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="getMesh">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Get the mesh specified by the given triangles, creating it if it does not already exist. "/>
        <details key="body" value="// The ID of the triangle list&#xD;&#xA;int ID = -1;&#xD;&#xA;&#xD;&#xA;// Whether the triangle list has been found in the cache&#xD;&#xA;boolean found = false;&#xD;&#xA;&#xD;&#xA;// Convert the list to a set&#xD;&#xA;Set&lt;Triangle> triangleSet = new HashSet(triangles);&#xD;&#xA;&#xD;&#xA;// Check each set in the cache for a match&#xD;&#xA;for (int i : sourceTriangleCache.keySet()) {&#xD;&#xA;&#x9;ID = i;&#xD;&#xA;&#xD;&#xA;&#x9;// If a match is found, stop the search&#xD;&#xA;&#x9;if (triangleSet.equals(sourceTriangleCache.get(i))) {&#xD;&#xA;&#x9;&#x9;found = true;&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// If the list was found, return the mesh with the same ID&#xD;&#xA;if (found) {&#xD;&#xA;&#x9;return triangleCache.get(ID);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// If the list was not found, create a mesh based on it and insert both&#xD;&#xA;// into the caches.&#xD;&#xA;else {&#xD;&#xA;&#x9;sourceTriangleCache.put(ID, triangleSet);&#xD;&#xA;&#x9;T mesh = createMesh(triangles);&#xD;&#xA;&#x9;triangleCache.put(ID, mesh);&#xD;&#xA;&#x9;return mesh;&#xD;&#xA;}"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//MeshCache/T"/>
      <eParameters name="triangles">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
          <eTypeArguments eClassifier="#//Triangle"/>
        </eGenericType>
      </eParameters>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RenderObject">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The object responsible for maintaining the base mesh which will be used to render an INode. This mesh, of type T that is native to the graphical engine, will be retrieved from the MeshCache based on the properties of the source INode."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eOperations name="getMesh">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return render;"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//RenderObject/T"/>
    </eOperations>
    <eOperations name="registerOption">
      <eParameters name="option" eType="#//DisplayOption"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="meshCache">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The cache from which the mesh will be pulled. It is intended that all RenderObjects in the same context should share the same meshCache."/>
      </eAnnotations>
      <eGenericType eClassifier="#//MeshCache">
        <eTypeArguments/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="render">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The rendered object which can be provided to the graphics engine in order for a shape to be drawn."/>
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//RenderObject/T"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="source" eType="#//INode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The wrapped source object whose data will be used to render a shape in the graphics engine."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The rendered objects corresponding to the souorce object's children."/>
      </eAnnotations>
      <eGenericType eClassifier="#//IRenderElement">
        <eTypeArguments eTypeParameter="#//RenderObject/T"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="displayOptions" upperBound="-1"
        containment="true">
      <eGenericType eClassifier="#//DisplayOption">
        <eTypeArguments/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//IRenderElement">
      <eTypeArguments eTypeParameter="#//RenderObject/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IRenderElement" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An element in the geometry which will be rendered inside the graphical engine. T is to be some data type native to the graphical engine."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eOperations name="getMesh">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Get the rendered object."/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//IRenderElement/T"/>
    </eOperations>
    <eOperations name="getBase" eType="#//INode">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Get the source data object on whose properties the render is based. If the IRenderElement's direct source is another IRenderElement, the INode at the bottom of the sequence of IRenderElements will be returned."/>
      </eAnnotations>
    </eOperations>
    <eOperations name="handleChildren">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Handle the source object's children by applying them to the mesh in accordance to the object's type. "/>
      </eAnnotations>
      <eParameters name="children">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EEList">
          <eTypeArguments eClassifier="#//IRenderElement">
            <eTypeArguments eTypeParameter="#//IRenderElement/T"/>
          </eTypeArguments>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="getProperty" eType="#//Object">
      <eParameters name="property" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="setProperty">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Set the given rendering property to the new value."/>
      </eAnnotations>
      <eParameters name="property" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eParameters name="value" eType="#//Object"/>
    </eOperations>
    <eOperations name="copy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Makes this object into a deep copy of the source object, if it is an appropriate type."/>
      </eAnnotations>
      <eParameters name="source" eType="#//Object"/>
    </eOperations>
    <eOperations name="clone" eType="#//Object">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Make a new copy of this object."/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="INode" instanceClassName="org.eclipse.january.geometry.INode">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This class represents a file path on the file system."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Triangle" instanceClassName="org.eclipse.january.geometry.Triangle"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceTypeName="newDataType3"/>
  <eClassifiers xsi:type="ecore:EClass" name="DisplayOption">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This class contains additional optional rendering information that will be applied to the containing RenderObject's data. A DisplayOption will offer addional functionality beyond that provided by the RenderObject simply specifiyng the geometry for the shape."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eOperations name="modify">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Apply this option's modifications to the given mesh."/>
      </eAnnotations>
      <eParameters name="element">
        <eGenericType eTypeParameter="#//DisplayOption/T"/>
      </eParameters>
    </eOperations>
    <eOperations name="getDefaultProperties">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Object"/>
      </eGenericType>
    </eOperations>
    <eOperations name="getDisplayOptionData" eType="#//IDisplayOptionData"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="active" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Whether the option is currently active. If false, the DisplayOption will not have any effect, the same as if it were not in the RenderObject's list of options. If true, it will apply its changes to the RenderObject's mesh."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="optionGroup" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The option group to which this DisplayOption belongs. The option group will determing the name under which the DisplayOption's controls will be published to users and will allow conceptually related options to share the same control."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parent">
      <eGenericType eClassifier="#//RenderObject">
        <eTypeArguments/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//DisplayOptionType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The type of control which best corresponds to this class's configuraiton options."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OpacityOption">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An option that will allow the RenderObject to display with a non-default opacity. "/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eGenericSuperTypes eClassifier="#//DisplayOption">
      <eTypeArguments eTypeParameter="#//OpacityOption/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScaleOption">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A DisplayOption which will control the size at which the object is displayed."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eGenericSuperTypes eClassifier="#//DisplayOption">
      <eTypeArguments eTypeParameter="#//ScaleOption/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WireframeOption">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An option which allows a mesh to be rendered as a wireframe."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eGenericSuperTypes eClassifier="#//DisplayOption">
      <eTypeArguments eTypeParameter="#//WireframeOption/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ColorOption">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An option which will set the mesh's color. "/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eGenericSuperTypes eClassifier="#//DisplayOption">
      <eTypeArguments eTypeParameter="#//ColorOption/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="DisplayOptionType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The type of control which a DisplayOption will be associated with."/>
    </eAnnotations>
    <eLiterals name="COMBO" literal="COMBO"/>
    <eLiterals name="DOUBLE_TEXT" value="1" literal="DOUBLE_TEXT"/>
    <eLiterals name="INTEGER_TEXT" value="2" literal="INTEGER_TEXT"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IDisplayOptionData" abstract="true"
      interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This interface is for objects which contain information on the configuration data for a DisplayOption."/>
    </eAnnotations>
    <eOperations name="getDisplayOptionType" eType="#//DisplayOptionType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="displayOption">
      <eGenericType eClassifier="#//DisplayOption">
        <eTypeArguments/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ComboDisplayOptionData" eSuperTypes="#//IDisplayOptionData">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="textToPropertyValuesMap"
        transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eTypeArguments eClassifier="#//Object"/>
        </eTypeArguments>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DoubleTextDisplayOptionData" eSuperTypes="#//IDisplayOptionData">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyToValueMap" transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Double"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyMinValues" transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Double"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyMaxValues" transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Double"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Double" instanceClassName="java.lang.Double"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerTextDisplayOptionData" eSuperTypes="#//IDisplayOptionData">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyToValueMap" transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Integer"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyMinValues" transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Integer"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="propertyMaxValues" transient="true">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eTypeArguments eClassifier="#//Integer"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
</ecore:EPackage>
