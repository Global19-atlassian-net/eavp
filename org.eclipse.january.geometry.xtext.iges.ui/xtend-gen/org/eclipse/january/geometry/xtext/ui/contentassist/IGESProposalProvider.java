/**
 * generated by Xtext 2.9.1
 */
package org.eclipse.january.geometry.xtext.ui.contentassist;

import org.apache.commons.lang.StringUtils;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.january.geometry.xtext.ui.contentassist.AbstractIGESProposalProvider;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.eclipse.xtext.xbase.lib.Exceptions;

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
@SuppressWarnings("all")
public class IGESProposalProvider extends AbstractIGESProposalProvider {
  private final int START = 1;
  
  private final int GLOBAL = 2;
  
  private final int DATA = 3;
  
  private final int PARAM = 4;
  
  private final int TERMINAL = 5;
  
  @Override
  public void completeIGES_Start(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    int offset = context.getOffset();
    String _leftPad = StringUtils.leftPad(("S      " + Integer.valueOf(((offset / 81) + 1))), 80, " ");
    String proposal = (_leftPad + "\n");
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal(proposal, context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeGlobal_Values(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("1H,,", "Delimiter", null, context);
    acceptor.accept(_createCompletionProposal);
    ICompletionProposal _createCompletionProposal_1 = this.createCompletionProposal("1H;,", "Separator", null, context);
    acceptor.accept(_createCompletionProposal_1);
    int _offset = context.getOffset();
    String _sectionEnd = this.getSectionEnd('G', _offset, context);
    String toEnd = (_sectionEnd + "\n");
    int _offset_1 = context.getOffset();
    int _modulo = (_offset_1 % 81);
    int _minus = (81 - _modulo);
    String toEndwSpace = StringUtils.leftPad(toEnd, _minus, " ");
    int _offset_2 = context.getOffset();
    int _modulo_1 = (_offset_2 % 81);
    int _minus_1 = (80 - _modulo_1);
    String toEndSection = StringUtils.leftPad(toEnd, _minus_1, " ");
    ICompletionProposal _createCompletionProposal_2 = this.createCompletionProposal(toEndwSpace, "End of line", null, context);
    acceptor.accept(_createCompletionProposal_2);
    ICompletionProposal _createCompletionProposal_3 = this.createCompletionProposal(("; " + toEndSection), "End of Section", null, context);
    acceptor.accept(_createCompletionProposal_3);
  }
  
  @Override
  public void completeEntry_Type(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    String _typeName = this.getTypeName(100);
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("     100", _typeName, null, context);
    acceptor.accept(_createCompletionProposal);
    String _typeName_1 = this.getTypeName(102);
    ICompletionProposal _createCompletionProposal_1 = this.createCompletionProposal("     102", _typeName_1, null, context);
    acceptor.accept(_createCompletionProposal_1);
    String _typeName_2 = this.getTypeName(104);
    ICompletionProposal _createCompletionProposal_2 = this.createCompletionProposal("     104", _typeName_2, null, context);
    acceptor.accept(_createCompletionProposal_2);
    String _typeName_3 = this.getTypeName(106);
    ICompletionProposal _createCompletionProposal_3 = this.createCompletionProposal("     106", _typeName_3, null, context);
    acceptor.accept(_createCompletionProposal_3);
    String _typeName_4 = this.getTypeName(108);
    ICompletionProposal _createCompletionProposal_4 = this.createCompletionProposal("     108", _typeName_4, null, context);
    acceptor.accept(_createCompletionProposal_4);
    String _typeName_5 = this.getTypeName(110);
    ICompletionProposal _createCompletionProposal_5 = this.createCompletionProposal("     110", _typeName_5, null, context);
    acceptor.accept(_createCompletionProposal_5);
    String _typeName_6 = this.getTypeName(112);
    ICompletionProposal _createCompletionProposal_6 = this.createCompletionProposal("     112", _typeName_6, null, context);
    acceptor.accept(_createCompletionProposal_6);
    String _typeName_7 = this.getTypeName(114);
    ICompletionProposal _createCompletionProposal_7 = this.createCompletionProposal("     114", _typeName_7, null, context);
    acceptor.accept(_createCompletionProposal_7);
    String _typeName_8 = this.getTypeName(116);
    ICompletionProposal _createCompletionProposal_8 = this.createCompletionProposal("     116", _typeName_8, null, context);
    acceptor.accept(_createCompletionProposal_8);
    String _typeName_9 = this.getTypeName(118);
    ICompletionProposal _createCompletionProposal_9 = this.createCompletionProposal("     118", _typeName_9, null, context);
    acceptor.accept(_createCompletionProposal_9);
    String _typeName_10 = this.getTypeName(120);
    ICompletionProposal _createCompletionProposal_10 = this.createCompletionProposal("     120", _typeName_10, null, context);
    acceptor.accept(_createCompletionProposal_10);
    String _typeName_11 = this.getTypeName(122);
    ICompletionProposal _createCompletionProposal_11 = this.createCompletionProposal("     122", _typeName_11, null, context);
    acceptor.accept(_createCompletionProposal_11);
    String _typeName_12 = this.getTypeName(123);
    ICompletionProposal _createCompletionProposal_12 = this.createCompletionProposal("     123", _typeName_12, null, context);
    acceptor.accept(_createCompletionProposal_12);
    String _typeName_13 = this.getTypeName(124);
    ICompletionProposal _createCompletionProposal_13 = this.createCompletionProposal("     124", _typeName_13, null, context);
    acceptor.accept(_createCompletionProposal_13);
    String _typeName_14 = this.getTypeName(126);
    ICompletionProposal _createCompletionProposal_14 = this.createCompletionProposal("     126", _typeName_14, null, context);
    acceptor.accept(_createCompletionProposal_14);
    String _typeName_15 = this.getTypeName(128);
    ICompletionProposal _createCompletionProposal_15 = this.createCompletionProposal("     128", _typeName_15, null, context);
    acceptor.accept(_createCompletionProposal_15);
    String _typeName_16 = this.getTypeName(130);
    ICompletionProposal _createCompletionProposal_16 = this.createCompletionProposal("     130", _typeName_16, null, context);
    acceptor.accept(_createCompletionProposal_16);
    String _typeName_17 = this.getTypeName(140);
    ICompletionProposal _createCompletionProposal_17 = this.createCompletionProposal("     140", _typeName_17, null, context);
    acceptor.accept(_createCompletionProposal_17);
    String _typeName_18 = this.getTypeName(141);
    ICompletionProposal _createCompletionProposal_18 = this.createCompletionProposal("     141", _typeName_18, null, context);
    acceptor.accept(_createCompletionProposal_18);
    String _typeName_19 = this.getTypeName(142);
    ICompletionProposal _createCompletionProposal_19 = this.createCompletionProposal("     142", _typeName_19, null, context);
    acceptor.accept(_createCompletionProposal_19);
    String _typeName_20 = this.getTypeName(143);
    ICompletionProposal _createCompletionProposal_20 = this.createCompletionProposal("     143", _typeName_20, null, context);
    acceptor.accept(_createCompletionProposal_20);
    String _typeName_21 = this.getTypeName(144);
    ICompletionProposal _createCompletionProposal_21 = this.createCompletionProposal("     144", _typeName_21, null, context);
    acceptor.accept(_createCompletionProposal_21);
    String _typeName_22 = this.getTypeName(150);
    ICompletionProposal _createCompletionProposal_22 = this.createCompletionProposal("     150", _typeName_22, null, context);
    acceptor.accept(_createCompletionProposal_22);
    String _typeName_23 = this.getTypeName(152);
    ICompletionProposal _createCompletionProposal_23 = this.createCompletionProposal("     152", _typeName_23, null, context);
    acceptor.accept(_createCompletionProposal_23);
    String _typeName_24 = this.getTypeName(154);
    ICompletionProposal _createCompletionProposal_24 = this.createCompletionProposal("     154", _typeName_24, null, context);
    acceptor.accept(_createCompletionProposal_24);
    String _typeName_25 = this.getTypeName(156);
    ICompletionProposal _createCompletionProposal_25 = this.createCompletionProposal("     156", _typeName_25, null, context);
    acceptor.accept(_createCompletionProposal_25);
    String _typeName_26 = this.getTypeName(158);
    ICompletionProposal _createCompletionProposal_26 = this.createCompletionProposal("     158", _typeName_26, null, context);
    acceptor.accept(_createCompletionProposal_26);
    String _typeName_27 = this.getTypeName(160);
    ICompletionProposal _createCompletionProposal_27 = this.createCompletionProposal("     160", _typeName_27, null, context);
    acceptor.accept(_createCompletionProposal_27);
    String _typeName_28 = this.getTypeName(162);
    ICompletionProposal _createCompletionProposal_28 = this.createCompletionProposal("     162", _typeName_28, null, context);
    acceptor.accept(_createCompletionProposal_28);
    String _typeName_29 = this.getTypeName(164);
    ICompletionProposal _createCompletionProposal_29 = this.createCompletionProposal("     164", _typeName_29, null, context);
    acceptor.accept(_createCompletionProposal_29);
    String _typeName_30 = this.getTypeName(168);
    ICompletionProposal _createCompletionProposal_30 = this.createCompletionProposal("     168", _typeName_30, null, context);
    acceptor.accept(_createCompletionProposal_30);
    String _typeName_31 = this.getTypeName(180);
    ICompletionProposal _createCompletionProposal_31 = this.createCompletionProposal("     180", _typeName_31, null, context);
    acceptor.accept(_createCompletionProposal_31);
    String _typeName_32 = this.getTypeName(186);
    ICompletionProposal _createCompletionProposal_32 = this.createCompletionProposal("     186", _typeName_32, null, context);
    acceptor.accept(_createCompletionProposal_32);
    String _typeName_33 = this.getTypeName(190);
    ICompletionProposal _createCompletionProposal_33 = this.createCompletionProposal("     190", _typeName_33, null, context);
    acceptor.accept(_createCompletionProposal_33);
    String _typeName_34 = this.getTypeName(192);
    ICompletionProposal _createCompletionProposal_34 = this.createCompletionProposal("     192", _typeName_34, null, context);
    acceptor.accept(_createCompletionProposal_34);
    String _typeName_35 = this.getTypeName(194);
    ICompletionProposal _createCompletionProposal_35 = this.createCompletionProposal("     194", _typeName_35, null, context);
    acceptor.accept(_createCompletionProposal_35);
    String _typeName_36 = this.getTypeName(196);
    ICompletionProposal _createCompletionProposal_36 = this.createCompletionProposal("     196", _typeName_36, null, context);
    acceptor.accept(_createCompletionProposal_36);
    String _typeName_37 = this.getTypeName(198);
    ICompletionProposal _createCompletionProposal_37 = this.createCompletionProposal("     198", _typeName_37, null, context);
    acceptor.accept(_createCompletionProposal_37);
    String _typeName_38 = this.getTypeName(308);
    ICompletionProposal _createCompletionProposal_38 = this.createCompletionProposal("     308", _typeName_38, null, context);
    acceptor.accept(_createCompletionProposal_38);
    String _typeName_39 = this.getTypeName(314);
    ICompletionProposal _createCompletionProposal_39 = this.createCompletionProposal("     314", _typeName_39, null, context);
    acceptor.accept(_createCompletionProposal_39);
    String _typeName_40 = this.getTypeName(408);
    ICompletionProposal _createCompletionProposal_40 = this.createCompletionProposal("     408", _typeName_40, null, context);
    acceptor.accept(_createCompletionProposal_40);
    String _typeName_41 = this.getTypeName(502);
    ICompletionProposal _createCompletionProposal_41 = this.createCompletionProposal("     502", _typeName_41, null, context);
    acceptor.accept(_createCompletionProposal_41);
    String _typeName_42 = this.getTypeName(504);
    ICompletionProposal _createCompletionProposal_42 = this.createCompletionProposal("     504", _typeName_42, null, context);
    acceptor.accept(_createCompletionProposal_42);
    String _typeName_43 = this.getTypeName(508);
    ICompletionProposal _createCompletionProposal_43 = this.createCompletionProposal("     508", _typeName_43, null, context);
    acceptor.accept(_createCompletionProposal_43);
    String _typeName_44 = this.getTypeName(510);
    ICompletionProposal _createCompletionProposal_44 = this.createCompletionProposal("     510", _typeName_44, null, context);
    acceptor.accept(_createCompletionProposal_44);
    String _typeName_45 = this.getTypeName(514);
    ICompletionProposal _createCompletionProposal_45 = this.createCompletionProposal("     514", _typeName_45, null, context);
    acceptor.accept(_createCompletionProposal_45);
  }
  
  @Override
  public void completeEntry_ParamData(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("       1", context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeEntry_Structure(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("       0", context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeEntry_LineFont(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("       0", "No line font", null, context);
    acceptor.accept(_createCompletionProposal);
    ICompletionProposal _createCompletionProposal_1 = this.createCompletionProposal("       1", "Solid", null, context);
    acceptor.accept(_createCompletionProposal_1);
    ICompletionProposal _createCompletionProposal_2 = this.createCompletionProposal("       2", "Dashed", null, context);
    acceptor.accept(_createCompletionProposal_2);
    ICompletionProposal _createCompletionProposal_3 = this.createCompletionProposal("       3", "Phantom", null, context);
    acceptor.accept(_createCompletionProposal_3);
    ICompletionProposal _createCompletionProposal_4 = this.createCompletionProposal("       4", "Centerline", null, context);
    acceptor.accept(_createCompletionProposal_4);
    ICompletionProposal _createCompletionProposal_5 = this.createCompletionProposal("       5", "Dotted", null, context);
    acceptor.accept(_createCompletionProposal_5);
  }
  
  @Override
  public void completeEntry_Level(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("       0", context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeEntry_View(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("       0", context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeEntry_TransformMatrix(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("       0", context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeEntry_Status(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal("00000001", context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeEntry_Index(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    int _offset = context.getOffset();
    String _sectionEnd = this.getSectionEnd('D', _offset, context);
    String _plus = (_sectionEnd + "\n");
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal(_plus, context);
    acceptor.accept(_createCompletionProposal);
  }
  
  @Override
  public void completeEntry_LineWeight(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
  }
  
  @Override
  public void completeEntry_Color(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
  }
  
  @Override
  public void completeEntry_ParamLines(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
  }
  
  @Override
  public void completeEntry_Form(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
  }
  
  @Override
  public void completeEntry_EntityLabel(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
  }
  
  @Override
  public void completeEntry_SubNum(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
  }
  
  private String getSectionEnd(final char section, final int offset, final ContentAssistContext context) {
    int row = (offset / 81);
    int secNum = this.findSecNum(row, section, context);
    String _string = Integer.toString(secNum);
    String _leftPad = StringUtils.leftPad(_string, 7, " ");
    String intstr = (Character.valueOf(section) + _leftPad);
    return intstr;
  }
  
  private int findSecNum(final int row, final char sec, final ContentAssistContext context) {
    try {
      int index = 0;
      int r = (row - 1);
      while (((r >= 0) && (context.getDocument().getChar(((81 * r) + 72)) == sec))) {
        {
          r--;
          index++;
        }
      }
      return (index + 1);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  public String getTypeName(final int type) {
    String _switchResult = null;
    switch (type) {
      case 100:
        _switchResult = "Circular Arc";
        break;
      case 102:
        _switchResult = "Composite Curve";
        break;
      case 104:
        _switchResult = "Conic Arc";
        break;
      case 106:
        _switchResult = "Copious Data";
        break;
      case 108:
        _switchResult = "Plane";
        break;
      case 110:
        _switchResult = "Line";
        break;
      case 112:
        _switchResult = "P. Spline Curve";
        break;
      case 114:
        _switchResult = "P. Spline Surface";
        break;
      case 116:
        _switchResult = "Point";
        break;
      case 118:
        _switchResult = "Ruled Surface";
        break;
      case 120:
        _switchResult = "Surface of Revolution";
        break;
      case 122:
        _switchResult = "Tabulated Cylinder";
        break;
      case 123:
        _switchResult = "Direction";
        break;
      case 124:
        _switchResult = "Transformation Matrix";
        break;
      case 126:
        _switchResult = "Rat. B-Spline Curve";
        break;
      case 128:
        _switchResult = "Rat. B-Spline Surface";
        break;
      case 130:
        _switchResult = "Offset Curve";
        break;
      case 140:
        _switchResult = "Offset Surface";
        break;
      case 141:
        _switchResult = "Boundary";
        break;
      case 142:
        _switchResult = "Curve on a P. Surface";
        break;
      case 143:
        _switchResult = "Bounded Surface";
        break;
      case 144:
        _switchResult = "Trimmed Surface";
        break;
      case 150:
        _switchResult = "Block";
        break;
      case 152:
        _switchResult = "Right Angular Wedge";
        break;
      case 154:
        _switchResult = "Right Circ. Cylinder";
        break;
      case 156:
        _switchResult = "Right Circular Cone";
        break;
      case 158:
        _switchResult = "Sphere";
        break;
      case 160:
        _switchResult = "Torus";
        break;
      case 162:
        _switchResult = "Solid of Revolution";
        break;
      case 164:
        _switchResult = "Solid of L. Extrusion";
        break;
      case 168:
        _switchResult = "Ellipsoid";
        break;
      case 180:
        _switchResult = "Boolean Tree";
        break;
      case 186:
        _switchResult = "M. Solid B-Rep Object";
        break;
      case 190:
        _switchResult = "Plane Surface";
        break;
      case 192:
        _switchResult = "Right Cir. Cyl. Surface";
        break;
      case 194:
        _switchResult = "Right Cir. Con. Surface";
        break;
      case 196:
        _switchResult = "Spherical Surface";
        break;
      case 198:
        _switchResult = "Toroidal Surface";
        break;
      case 308:
        _switchResult = "Subfigure Definition";
        break;
      case 314:
        _switchResult = "Color definition";
        break;
      case 408:
        _switchResult = "Sing. Subfigure Instance";
        break;
      case 502:
        _switchResult = "Vertex List";
        break;
      case 504:
        _switchResult = "Edge List";
        break;
      case 508:
        _switchResult = "Loop";
        break;
      case 510:
        _switchResult = "Face";
        break;
      case 514:
        _switchResult = "Shell";
        break;
      default:
        _switchResult = "Unknown Entity";
        break;
    }
    return _switchResult;
  }
}
